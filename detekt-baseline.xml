<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ClassOrdering:PreciseSwipe.kt$PreciseSwipe$private fun interpolate(start: FloatArray, end: FloatArray, steps: Int): Array&lt;FloatArray&gt;</ID>
    <ID>ClassOrdering:Screen.kt$Screen.Companion$ inline fun &lt;reified T : Screen&lt;T&gt;&gt; onScreen(noinline function: T.() -&gt; Unit): T</ID>
    <ID>CollapsibleIfStatements:ChipGroupActions.kt$ChipGroupActions.&lt;no name provided&gt;$if (chip is Chip) { if (chip.text == text) { chip.performClick() } }</ID>
    <ID>CollapsibleIfStatements:ItemMatcher.kt$ItemMatcher$if (parent.matches(it.parent) &amp;&amp; it.parent is RecyclerView) { if (item.matches(it)) { position = (it.parent as RecyclerView).getChildAdapterPosition(it) return true } }</ID>
    <ID>ComplexInterface:BaseAssertions.kt$BaseAssertions</ID>
    <ID>ComplexInterface:TextInputLayoutAssertions.kt$TextInputLayoutAssertions : BaseAssertions</ID>
    <ID>ComplexInterface:TextViewAssertions.kt$TextViewAssertions : BaseAssertions</ID>
    <ID>ComplexMethod:DrawableMatcher.kt$DrawableMatcher$override fun matchesSafely(view: View?): Boolean</ID>
    <ID>EmptyCatchBlock:KRecyclerView.kt$KRecyclerView${ }</ID>
    <ID>EmptyCatchBlock:KViewPager2.kt$KViewPager2${ }</ID>
    <ID>EmptyClassBlock:ToolbarViewActions.kt$ToolbarViewActions${ }</ID>
    <ID>EmptyDefaultConstructor:SelectedChipMatcher.kt$SelectedChipMatcher$()</ID>
    <ID>EmptyFunctionBlock:TestActivity.kt$TestActivity.&lt;no name provided&gt;${}</ID>
    <ID>MagicNumber:PickersActivity.kt$PickersActivity$10</ID>
    <ID>MagicNumber:PickersActivity.kt$PickersActivity$1985</ID>
    <ID>MagicNumber:PickersActivity.kt$PickersActivity$21</ID>
    <ID>MagicNumber:PickersActivity.kt$PickersActivity$23</ID>
    <ID>MagicNumber:PreciseSwipe.kt$PreciseSwipe$10</ID>
    <ID>MagicNumber:SliderActivity.kt$SliderActivity$5f</ID>
    <ID>MagicNumber:SpinnerActivity.kt$SpinnerActivity$9</ID>
    <ID>MagicNumber:TextInputLayoutActivity.kt$TextInputLayoutActivity$50</ID>
    <ID>MagicNumber:ViewPager2Activity.kt$ViewPager2Activity$5</ID>
    <ID>MaxLineLength:AbsListViewAdapterSizeMatcher.kt$AbsListViewAdapterSizeMatcher$class</ID>
    <ID>MaxLineLength:BaseDelegatesAdapter.kt$BaseDelegatesAdapter$abstract</ID>
    <ID>MaxLineLength:ContextUtils.kt$fun getResourceColor(@ColorRes resId: Int)</ID>
    <ID>MaxLineLength:ContextUtils.kt$fun getResourceDrawable(@DrawableRes resId: Int)</ID>
    <ID>MaxLineLength:ContextUtils.kt$fun getResourceString(@StringRes resId: Int)</ID>
    <ID>MaxLineLength:DataInteractionDelegate.kt$DataInteractionDelegate$class</ID>
    <ID>MaxLineLength:Delegate.kt$Delegate$private</ID>
    <ID>MaxLineLength:ImageViewAssertions.kt$ImageViewAssertions$fun</ID>
    <ID>MaxLineLength:ImageViewAssertions.kt$ImageViewAssertions$view.check(ViewAssertions.matches(DrawableMatcher(drawable = drawable, tintColorId = tintColorId , toBitmap = toBitmap)))</ID>
    <ID>MaxLineLength:ImageViewAssertions.kt$ImageViewAssertions$view.check(ViewAssertions.matches(DrawableMatcher(resId = resId, tintColorId = tintColorId, toBitmap = toBitmap)))</ID>
    <ID>MaxLineLength:ItemMatcher.kt$ItemMatcher$class</ID>
    <ID>MaxLineLength:KRecyclerView.kt$KRecyclerView$function((provideItem(PositionMatcher(matcher, position)) as T).also { inRoot { withMatcher(this@KRecyclerView.root) } })</ID>
    <ID>MaxLineLength:KSpinner.kt$KSpinner$ViewInteractionDelegate(onView(allOf(ViewMatchers.isAssignableFrom(AdapterView::class.java))).inRoot(SpinnerPopupMatcher()))</ID>
    <ID>MaxLineLength:Kakao.kt$Kakao$Interceptor.Configurator().apply(configurator).configure()</ID>
    <ID>MaxLineLength:PositionMatcher.kt$PositionMatcher$class</ID>
    <ID>MaxLineLength:RecyclerViewAdapterSizeMatcher.kt$RecyclerViewAdapterSizeMatcher$class</ID>
    <ID>MaxLineLength:Screen.kt$Screen$Interceptor.Configurator().apply(configurator).configure()</ID>
    <ID>MaxLineLength:SearchViewActions.kt$SearchViewActions.&lt;no name provided&gt;$override fun getConstraints(): Matcher&lt;View&gt;</ID>
    <ID>MaxLineLength:SearchViewAssertions.kt$SearchViewAssertions$fun</ID>
    <ID>MaxLineLength:SwitchableActions.kt$SwitchableActions.&lt;no name provided&gt;.&lt;no name provided&gt;$description.appendText("is assignable from class: ${Switch::class.java} or ${SwitchCompat::class.java}")</ID>
    <ID>MaxLineLength:ViewInteractionDelegate.kt$ViewInteractionDelegate$class</ID>
    <ID>MaxLineLength:WebElementBuilder.kt$WebElementBuilder$class</ID>
    <ID>MaxLineLength:WebInteractionDelegate.kt$WebInteractionDelegate$class</ID>
    <ID>NestedBlockDepth:DrawableMatcher.kt$DrawableMatcher$override fun matchesSafely(view: View?): Boolean</ID>
    <ID>ReturnCount:PreciseSwipe.kt$PreciseSwipe$override fun sendSwipe( uiController: UiController, startCoordinates: FloatArray, endCoordinates: FloatArray, precision: FloatArray ): Swiper.Status</ID>
    <ID>ReturnCount:ToolbarNavigationMatcher.kt$ToolbarNavigationMatcher$override fun matchesSafely(view: Toolbar): Boolean</ID>
    <ID>SpacingBetweenPackageAndImports:DrawableMatcher.kt$ </ID>
    <ID>SwallowedException:KRecyclerView.kt$KRecyclerView$catch (error: Throwable) { }</ID>
    <ID>SwallowedException:KViewPager2.kt$KViewPager2$catch (error: Throwable) { }</ID>
    <ID>ThrowingExceptionsWithoutMessageOrCause:BaseDelegatesAdapter.kt$BaseDelegatesAdapter$IllegalArgumentException()</ID>
    <ID>TooGenericExceptionCaught:KRecyclerView.kt$KRecyclerView$error: Throwable</ID>
    <ID>TooGenericExceptionCaught:KViewPager2.kt$KViewPager2$error: Throwable</ID>
    <ID>TooManyFunctions:BaseAssertions.kt$BaseAssertions</ID>
    <ID>TooManyFunctions:IntentBuilder.kt$IntentBuilder</ID>
    <ID>TooManyFunctions:KAbsListView.kt$KAbsListView : ScrollViewActionsAbsListViewAdapterActionsBaseAssertionsAbsListViewAdapterAssertions</ID>
    <ID>TooManyFunctions:KRecyclerView.kt$KRecyclerView : RecyclerActionsBaseAssertionsRecyclerAdapterAssertions</ID>
    <ID>TooManyFunctions:KSpinner.kt$KSpinner : SpinnerAdapterActionsSpinnerAdapterAssertionsBaseAssertions</ID>
    <ID>TooManyFunctions:RootBuilder.kt$RootBuilder</ID>
    <ID>TooManyFunctions:TextInputLayoutAssertions.kt$TextInputLayoutAssertions : BaseAssertions</ID>
    <ID>TooManyFunctions:TextViewAssertions.kt$TextViewAssertions : BaseAssertions</ID>
    <ID>TooManyFunctions:UriBuilder.kt$UriBuilder</ID>
    <ID>TooManyFunctions:ViewBuilder.kt$ViewBuilder</ID>
    <ID>TooManyFunctions:WebInteractionDelegate.kt$WebInteractionDelegate : Delegate</ID>
    <ID>VarCouldBeVal:SearchViewAssertions.kt$SearchViewAssertions.&lt;no name provided&gt;$var realHint: String? = null</ID>
    <ID>WrongEqualsTypeParameter:DataBuilder.kt$DataBuilder$ fun equals(obj: Any)</ID>
  </CurrentIssues>
</SmellBaseline>
